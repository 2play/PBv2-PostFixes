https://docs.libretro.com/library/higan_accuracy/
Nintendo - SNES / Famicom (higan Accuracy)

Nintendo - Super Nintendo Entertainment System
Nintendo - Super Nintendo Entertainment System Hacks
Nintendo - Game Boy
Nintendo - Game Boy Color

Background
A port of higan v106's Super Famicom emulation core to libretro. This core is the most in sync with upstream higan.

Most accurate SNES emulation available.
Simplified and easily accessible Super Game Boy functionality compared to the other bsnes cores.

Extensions
Content that can be loaded by the higan Accuracy core have the following file extensions:

.sfc
.smc
.gb
.gbc
.bml
.rom

BIOS
Required or optional firmware files go in the frontend's system directory.

Attention

higan Accuracy uses split ROMS for special chip games.

Attention

Firmware files for SGB emulation need to be in directories called SGB1.sfc and SGB2.sfc in RetroArch's system directory. Look at the Super GameBoy support section for more information.

Notable DSP1.mdDSP1B Games:

Super Mario Kart
Pilotwings
Notable DSP2 Games:

Dungeon Master
Notable DSP3 Games:

SD Gundam GX
Notable DSP4 Games:

Top Gear 3000
Notable Cx4 Games:

Mega Man X2
Mega Man X3

Filename				Description								md5sum
dsp1.data.rom			DSP1 co-processor firmware - Optional	3d81b45fa0c2aa8b852dfb1ece7c0971
dsp1.program.rom		DSP1 co-processor firmware - Optional	ae209fbe789fbf11a48aea5ab1197321
dsp1b.data.rom			DSP1B co-processor firmware - Optional	1e3f568634a7d8284020dddc0ae905bc
dsp1b.program.rom		DSP1B co-processor firmware - Optional	d10f446888e097cbf500f3f663cf4f6d
dsp2.data.rom			DSP2 co-processor firmware - Optional	e9417e29223b139c3c4b635a2a3b8744
dsp2.program.rom		DSP2 co-processor firmware - Optional	aa6e5922a3ed5ded54f24247c11143c5
dsp3.data.rom			DSP3 co-processor firmware - Optional	0a81210c0a940b997dd9843281008ee6
dsp3.program.rom		DSP3 co-processor firmware - Optional	d99ca4562818d49cee1f242705bba6f8
dsp4.data.rom			DSP4 co-processor firmware - Optional	ee4990879eb68e3cbca239c5bc20303d
dsp4.program.rom		DSP4 co-processor firmware - Optional	a151023b948b90ffc23a5b594bb6fef2
cx4.data.rom			CX4 co-processor firmware - Optional	037ac4296b6b6a5c47c440188d3c72e3
st010.data.rom			ST010 co-processor firmware - Optional	254d70762b6f59f99c27c395aba7d07d
st010.program.rom		ST010 co-processor firmware - Optional	1d70019179a59a566a0bb5d3f2845544
st011.data.rom			ST011 co-processor firmware - Optional	10bd3f4aa949737ab9836512c35bcc29
st011.program.rom		ST011 co-processor firmware - Optional	95222ebf1c0c2990bcf25db43743f032
st018.data.rom			ST018 co-processor firmware - Optional	49c898b60d0f15e90d0ba780dd12f366
st018.program.rom		ST018 co-processor firmware - Optional	dda40ccd57390c96e49d30a041f9a9e7
SGB1.sfc/sgb1.boot.rom	Super Game Boy BIOS - Optional	
SGB1.sfc/program.rom	Super Game Boy ROM - Optional	
SGB2.sfc/sgb2.boot.rom	Super Game Boy 2 BIOS - Optional	
SGB2.sfc/program.rom	Super Game Boy 2 ROM - Optional

Geometry and timing
The higan Accuracy core's core provided FPS is (FPS)
The higan Accuracy core's core provided sample rate is (Rate)
The higan Accuracy core's core provided aspect ratio is (Ratio)
Super Gameboy Support
The higan Accuracy core uses a simplified Super Game Boy routine that makes it much easier to access this feature than with the old v094-based cores.

Instead of using the complex, CLI-based 'subsystem' launch commands, it looks for the necessary files in the system/BIOS directory whenever you feed the core a *.gb/c file.


 
To get it working, you'll need one or more Super Game Boy ROMs and the sgb.boot.rom BIOS.

Step 1

Make 2 subdirectories in RetroArch's system directory, one named SGB1.sfc and the other named SGB2.sfc.

Step 2

Copy your original Super Game Boy ROM into the SGB1.sfc directory and then rename it to program.rom. Copy your Super Game Boy 2 ROM into the SGB2.sfc directory and then rename it program.rom, as well.

Step 3

Copy your sgb.boot.rom BIOS into each of your SGB1.sfc and SGB2.sfc directories, and rename them to sgb1.boot.rom and sgb2.boot.rom, respectively.

The 'Preferred Super GameBoy BIOS' core option lets you choose which of the two SGB BIOSes to use.

Step 4

Load a SGB-supported GB.mdGBC rom.

Done



Warning

There may be graphical glitches when Rewind is set to On in RetroArch's settings.

MSU-1
Attention

MSU-1 support in this core is complex. Use the Snes9x core for simplified and easily accessible MSU-1 support.

MSU-1 support can be used by loading a correct .bml file.

There's documentation for loading MSU-1 games in standalone higan here.

Core options
The higan Accuracy core has the following option(s) that can be tweaked from the core options menu. The default setting is bolded.

Settings with (Restart) means that core has to be closed for the new setting to be applied on next launch.

Internal resolution [higan_sfc_internal_resolution] (512x480|512x448|512x240|512x224|256x240|256x224)

Self-explanatory.

512x480
512x448
512x240
512x224
256x240
256x224
Color emulation [higan_sfc_color_emulation] (OFF|ON)

Simulates the way a console’s display device differs from modern computer monitor’s colour reproduction. In particular, it simulates the slightly-different gamma correction used by the Super Famicom.

Color emulation - Disabled
Color emulation - Enabled
Blur emulation [higan_sfc_blur_emulation] (OFF|ON)

Simulates the limited horizontal resolution of standard-definition TVs by blurring together horizontally-adjacent pixels. Games like Jurassic Park for the Super Famicom depend on this to emulate a transparency effect.

Blur emulation - Disabled
Blur emulation - Enabled
Scanline emulation [higan_sfc_scanline_emulation] (OFF|ON)

Currently does not function properly.

Preferred Super GameBoy BIOS (restart) [higan_sfc_sgb_bios] (SGB1.sfc/|SGB2.sfc/)

Choose what Super GameBoy BIOS you want to use. Look at the Super GameBoy Support section for more information.


*****
https://docs.libretro.com/library/bsnes_accuracy/
Nintendo - SNES / Famicom (bsnes Accuracy)

Nintendo - Super Nintendo Entertainment System
Nintendo - Super Nintendo Entertainment System Hacks
Nintendo - Sufami Turbo

Background
bsnes is a Super Nintendo emulator that began development on 2004-10-14. It focuses on accuracy and clean code above all else. It never uses speed or compatibility hacks. As a result, the minimum system requirements are greater than with other emulators. bsnes comes in three different profiles (accuracy, balanced and performance) which contain minor differences in the PPU (graphics) emulation.

This core has been compiled with the Accuracy profile.

Highly accurate SNES emulation. Whether to use the Accuracy, or Balanced or Performance core depends on how much accuracy you want to give up for game performance.

Extensions
Content that can be loaded by the bsnes Accuracy core have the following file extensions:

.sfc
.smc
.bml

BIOS
Required or optional firmware files go in the frontend's system directory.

Attention

The bsnes Accuracy core uses split ROMS for special chip games.

Notable DSP1/DSP1B Games:

Super Mario Kart
Pilotwings
Notable DSP2 Games:

Dungeon Master
Notable DSP3 Games:

SD Gundam GX
Notable DSP4 Games:

Top Gear 3000
Notable Cx4 Games:

Mega Man X2
Mega Man X3
Filename			Description						md5sum
dsp1.data.rom		DSP1 co-processor firmware		3d81b45fa0c2aa8b852dfb1ece7c0971
dsp1.program.rom	DSP1 co-processor firmware		ae209fbe789fbf11a48aea5ab1197321
dsp1b.data.rom		DSP1B co-processor firmware		1e3f568634a7d8284020dddc0ae905bc
dsp1b.program.rom	DSP1B co-processor firmware		d10f446888e097cbf500f3f663cf4f6d
dsp2.data.rom		DSP2 co-processor firmware		e9417e29223b139c3c4b635a2a3b8744
dsp2.program.rom	DSP2 co-processor firmware		aa6e5922a3ed5ded54f24247c11143c5
dsp3.data.rom		DSP3 co-processor firmware		0a81210c0a940b997dd9843281008ee6
dsp3.program.rom	DSP3 co-processor firmware		d99ca4562818d49cee1f242705bba6f8
dsp4.data.rom		DSP4 co-processor firmware		ee4990879eb68e3cbca239c5bc20303d
dsp4.program.rom	DSP4 co-processor firmware		a151023b948b90ffc23a5b594bb6fef2
cx4.data.rom		CX4 co-processor firmware		037ac4296b6b6a5c47c440188d3c72e3
st010.data.rom		ST010 co-processor firmware		254d70762b6f59f99c27c395aba7d07d
st010.program.rom	ST010 co-processor firmware		1d70019179a59a566a0bb5d3f2845544
st011.data.rom		ST011 co-processor firmware		10bd3f4aa949737ab9836512c35bcc29
st011.program.rom	ST011 co-processor firmware		95222ebf1c0c2990bcf25db43743f032
st018.data.rom		ST018 co-processor firmware		49c898b60d0f15e90d0ba780dd12f366
st018.program.rom	ST018 co-processor firmware		dda40ccd57390c96e49d30a041f9a9e7
sgb.boot.rom		Super Game Boy BIOS

Geometry and timing
The bsnes Accuracy core's core provided FPS is 60.0988118623 for NTSC games and 50.0069789082 for PAL games.
The bsnes Accuracy core's core provided sample rate is 32040.5 Hz
The bsnes Accuracy core's core provided aspect ratio is 4/3
Super GameBoy
Warning

Super GameBoy support in this core is Windows only, and has buggy save state support and visual glitches. Use the higan Accuracy core or the nSide Balanced core for simplified, functional, and easily accessible Super Gameboy support.

For Super GameBoy support, you need sgb.boot.rom (in RetroArch's System directory), a GameBoy ROM and a Super GameBoy ROM.

Please note that the Game Boy and Super GameBoy ROMs have to be unzipped.

Super GameBoy is supported via the Subsystem API.

There are two ways to access the Subsystem API.

One way is to access the Subsystem API through RetroArch's GUI like this.

First, we load our GameBoy ROM through 'Load Super GameBoy' in RetroArch's Main Menu.





Next, we load our Super GameBoy ROM through 'Load Super GameBoy' in RetroArch's Menu Menu.





Then, we start the content by selecting 'Start GameBoy' In RetroArch's Menu Menu.



The other way is to launch RetroArch with commandline like this.

retroarch -L {path to bsnes core} {path to Super GameBoy ROM} --subsystem sgb {path to GameBoy rom}
MSU-1
Attention

MSU-1 support in this core is complex. Use the Snes9x core for simplified and easily accessible MSU-1 support.

MSU-1 support can be used by loading a correct .bml file.

There's documentation for loading MSU-1 games in standalone higan here.

*****

https://docs.libretro.com/library/mgba/
Nintendo - Game Boy Advance (mGBA)

Nintendo - Game Boy
Nintendo - Game Boy Color
Nintendo - Game Boy Advance
Super Game Boy BIOS - Optional


Background
mGBA is an emulator for running Game Boy Advance games. It aims to be faster and more accurate than many existing Game Boy Advance emulators, as well as adding features that other emulators lack. It also supports Game Boy and Game Boy Color games.

BIOS
Required or optional firmware files go in the frontend's system directory.

Warning

In order for the BIOS to be used, the 'Use BIOS file if found' core option must be set to On.

Filename		Description							md5sum
gba_bios.bin	Game Boy Advance BIOS - Optional	a860e8c0b6d573d191e4ec7db1b1e4f6
gb_bios.bin		Game Boy BIOS - Optional			32fbbd84168d3482956eb3c5051637f5
gbc_bios.bin	Game Boy Color BIOS - Optional		dbfce9db9deaa2567f6a84fde55f9680
sgb_bios.bin	Super Game Boy BIOS - Optional		d574d4f9c12f305074798f54c091a8b4

Extensions
Content that can be loaded by the mGBA core have the following file extensions:

.gb
.gbc
.gba

Geometry and timing
The mGBA core's core provided FPS is [FPS]
The mGBA core's core provided sample rate is 32768 Hz
The mGBA core's base width is [Base width]
The mGBA core's base height is [Base height]
The mGBA core's max width is [Max width]
The mGBA core's max height is [Max height]
The mGBA core's core provided aspect ratio is [Aspect ratio]

Core options
The mGBA core has the following option(s) that can be tweaked from the core options menu. The default setting is bolded.

Settings with (Restart) means that core has to be closed for the new setting to be applied on next launch.

Solar sensor level [mgba_solar_sensor_level] (0|1|2|3|4|5|6|7|8|9|10)

Can be used by games that employed the use of a solar sensor on their cartridges. E.g.: Boktai games.

Allow opposing directional input [mgba_allow_opposing_directions] (OFF|ON)

Allows opposing directional inputs. Up with Down. Right with Left.

Game Boy model (requires restart) [mgba_gb_model] (Autodetect|Game Boy|Super Game Boy|Game Boy Color|Game Boy Advance)

Runs loaded content with a specific Game Boy model.

Autodetect will select the most appropriate model for the current game.

Use BIOS file if found [mgba_use_bios] (ON|OFF)

Uses BIOS present in RetroArch's system directory. Look at the BIOS section for more information.

Skip BIOS intro [mgba_skip_bios] (OFF|ON)

The 'Use BIOS file if found' core option must be set to On for proper operation.

Skips the BIOS intro when a BIOS is present in RetroArch's system directory is used.

Skip BIOS intro - Off
Use Super Game Boy borders (requires restart) [mgba_sgb_borders] (ON|OFF)

Display Super Game Boy borders for Super Game Boy enhanced games.

Idle loop removal [mgba_idle_optimization] (Remove Known|Detect and Remove|Don't Remove)

Optimizes game performance by driving the GBA's CPU less hard.

Use this on low-powered hardware if its struggling with game performance.

Frameskip [mgba_frameskip] (0|1|2|3|4|5|6|7|8|9|10)

Choose how much frames should be skipped to improve performance at the expense of visual smoothness.


*****
https://docs.libretro.com/library/vba_m/
Nintendo - Game Boy Advance (VBA-M) (and It also supports Game Boy, Game Boy Color and Super Game Boy (borders, palette).)

Background
VBA-M is a Game Boy Advance emulator with the goal to improve upon VisualBoyAdvance by integrating the best features from the various builds floating around. It also supports Game Boy, Game Boy Color and Super Game Boy (borders, palette).

BIOS
Required or optional firmware files go in the frontend's system directory.

Filename	Description	md5sum
gba_bios.bin	Game Boy Advance BIOS - Optional	a860e8c0b6d573d191e4ec7db1b1e4f6
gb_bios.bin	Game Boy BIOS - Optional	32fbbd84168d3482956eb3c5051637f5
gbc_bios.bin	Game Boy Color BIOS - Optional	dbfce9db9deaa2567f6a84fde55f9680

Extensions
.gb
.gbc
.gba

Geometry and timing
The VBA-M core's core provided FPS is 59.72
The VBA-M core's core provided sample rate is 32768 Hz
The VBA-M core's base width is GBA: 240, GB: 160 (256 with border/SGB mode)
The VBA-M core's base height is GBA: 160, GB: 144 (224 with border/SGB mode)
The VBA-M core's max width is 256
The VBA-M core's max height is 224
The VBA-M core's core provided aspect ratio is GBA: 3:2, GB: 10:9 (8:7 with border/SGB)
Core options
The VBA-M core has the following option(s) that can be tweaked from the core options menu. The default setting is bolded.

Settings with (Restart) means that core has to be closed for the new setting to be applied on next launch.

Solar sensor level [vbam_solarsensor] (0|1|2|3|4|5|6|7|8|9|10)

For use with Boktai games (solar cartridge games). Manually adjust ingame's solar sensor meter.

Use BIOS file if found [vbam_usebios] (Off/On)

Uses BIOS present in RetroArch's system directory.

Force enable RTC [vbam_forceRTCenable] (Off/On)

Forces the internal real-time clock to be enabled regardless of rom. Usuable for rom patches that requires clock to be enabled (aka Pokemon).

Sound Interpolation [vbam_soundinterpolation] (Off/On)

Enable or disable sound filtering.

Sound Filtering [vbam_soundfiltering] (0|1|2|3|4|5|6|7|8|9|10)

Sets the cutoff-frequency for the interpolation filter. Higher value reduces more high frequencies.

(GB) Color Palette [vbam_palettes] (black and white|blue sea|dark knight|green forest|hot desert|pink dreams|weird colors|original gameboy|gba sp)

Set Game Boy palettes to use.

(GB) Color Palette - black and white
(GB) Color Palette - blue sea
(GB) Color Palette - dark knight
(GB) Color Palette - green forest
(GB) Color Palette - hot desert
(GB) Color Palette - pink dreams
(GB) Color Palette - weird colors
(GB) Color Palette - original gameboy
(GB) Color Palette - gba sp
(GB) Emulated Hardware (Requires Restart) [vbam_gbHardware] (Automatic|Game Boy Color|Super Game Boy|Game Boy|Game Boy Advance|Super Game Boy)

Selects the type of game boy handheld to emulate. Automatic will select the most appropriate model for the current game.

(GB) Enable Colorizer Hack (Needs Restart) [vbam_allowcolorizerhack] (Off/On)

Allows some Colorizer/DX patched gb roms to run correctly. NOT RECOMMENDED for non-colorized patched games since this hack relies on inaccurate vram and palette access.

See: https://github.com/libretro/vbam-libretro/issues/58

(GB) Show Borders [vbam_showborders] (auto|Off|On)

Shows a solid-colored border around the normal window. If current game is SGB capable, an appropriate border from the cartridge will be loaded and shown instead.

Show Borders - Off
Show Borders - On
(GB) Color Correction [vbam_gbcoloroption] (Off/On)

Applies color correction to palette.

(GB) Color Correction - Off
(GB) Color Correction - On
Enable Turbo Buttons [vbam_turboenable] (Off/On)

Enable or disable gamepad turbo buttons.

Turbo Delay (in frames) [vbam_turbodelay] (1|2|3|4|5|6|7...|15)

Repeat rate of turbo triggers in frames. Lower value triggers more buttons per second.

Analog Deadzone (%) [vbam_astick_deadzone] (5|10|15|20|25|30)

The minimum absolute value of the analog joystick axis to move the gyro/tilt controller axis value.

Sensor Sensitivity (Gyroscope) (%) [vbam_gyro_sensitivity] (10|15|20|25|30|35|40|45|50|55|60|65|70|75|80|85|90|95|100|105|110|115|120)

Used to adjust sensitivity level for gyro-enabled games. Default bind is left analog.

Sensor Sensitivity (Tilt) (%) [vbam_tilt_sensitivity] (10|15|20|25|30|35|40|45|50|55|60|65|70|75|80|85|90|95|100|105|110|115|120)

Used to adjust sensitivity level for gyro-enabled games. Default bind is right analog.

Swap Left/Right Analog [vbam_swap_astick] (Off/On)

Swaps left and right analog stick function for gyro and tilt

Sound channel 1 [vbam_sound_1] (Off/On)

Self-explanatory.

Sound channel 2 [vbam_sound_2] (Off/On)

Self-explanatory.

Sound channel 3 [vbam_sound_3] (Off/On)

Self-explanatory.

Sound channel 4 [vbam_sound_4] (Off/On)

Self-explanatory.

Sound DMA channel A [vbam_sound_5] (Off/On)

Self-explanatory.

Sound DMA channel B [vbam_sound_6] (Off/On)

Self-explanatory.

Show layer 1 [vbam_layer_1] (Off/On)

Self-explanatory.

Show layer 2 [vbam_layer_2] (Off/On)

Self-explanatory.

Show layer 3 [vbam_layer_3] (Off/On)

Self-explanatory.

Show layer 4 [vbam_layer_4] (Off/On)

Self-explanatory.

Show sprite layer [vbam_layer_5] (Off/On)

Self-explanatory.

Show window layer 1 [vbam_layer_6] (Off/On)

Self-explanatory.

Show window layer 2 [vbam_layer_7] (Off/On)

Self-explanatory.

Show sprite window layer [vbam_layer_8] (Off/On)

Self-explanatory.